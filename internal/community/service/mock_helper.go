// Code generated by MockGen. DO NOT EDIT.
// Source: service_helper.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	models "github.com/2024_2_BetterCallFirewall/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockrepoHelper is a mock of repoHelper interface.
type MockrepoHelper struct {
	ctrl     *gomock.Controller
	recorder *MockrepoHelperMockRecorder
}

// MockrepoHelperMockRecorder is the mock recorder for MockrepoHelper.
type MockrepoHelperMockRecorder struct {
	mock *MockrepoHelper
}

// NewMockrepoHelper creates a new mock instance.
func NewMockrepoHelper(ctrl *gomock.Controller) *MockrepoHelper {
	mock := &MockrepoHelper{ctrl: ctrl}
	mock.recorder = &MockrepoHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockrepoHelper) EXPECT() *MockrepoHelperMockRecorder {
	return m.recorder
}

// CheckAccess mocks base method.
func (m *MockrepoHelper) CheckAccess(ctx context.Context, communityID, userID uint32) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAccess", ctx, communityID, userID)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckAccess indicates an expected call of CheckAccess.
func (mr *MockrepoHelperMockRecorder) CheckAccess(ctx, communityID, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAccess", reflect.TypeOf((*MockrepoHelper)(nil).CheckAccess), ctx, communityID, userID)
}

// GetHeader mocks base method.
func (m *MockrepoHelper) GetHeader(ctx context.Context, communityID uint32) (*models.Header, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHeader", ctx, communityID)
	ret0, _ := ret[0].(*models.Header)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHeader indicates an expected call of GetHeader.
func (mr *MockrepoHelperMockRecorder) GetHeader(ctx, communityID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHeader", reflect.TypeOf((*MockrepoHelper)(nil).GetHeader), ctx, communityID)
}
